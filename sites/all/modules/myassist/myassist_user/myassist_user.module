<?php
/**
 * @file
 * Code for the MyAssist User feature.
 */

include_once 'myassist_user.features.inc';

/**
 * Implements hook_profile2_view().
 */
function myassist_user_profile2_view($profile, $view_mode, $langcode) {
  $uid = $profile->uid;

  $profile->content['userinfo'] = array(
    '#theme' => "myassist_userinfo",
    "#age" => $profile->content["field_age"]
  );

  if (array_key_exists("field_gender", $profile->content)) {
    $profile->content['userinfo']['#gender'] = $profile->content["field_gender"];
    unset($profile->content["field_gender"]);
  } else if (array_key_exists("field_gender_adult", $profile->content)) {
    $profile->content['userinfo']['#gender'] = $profile->content["field_gender_adult"];
    unset($profile->content["field_gender_adult"]);
  }

  unset($profile->content["field_age"]);


  $profile->content['username'] = array(
    '#theme' => "myassist_username", // Point to definition in myassist_achievements_theme
    '#weight' => 0,
    '#title' => 'Username',
    '#name' => $profile->user()->name, // Pass data to template (name must be defined in the definition)
  );
  $profile->content['membersince'] = array(
    '#theme' => "myassist_membersince", // Point to definition in myassist_achievements_theme
    '#weight' => 0,
    '#title' => 'Membersince',
    '#created' => date('d.m.Y', $profile->created),
  );

  $profile->content['nodes'] = array(
    '#markup' => views_embed_view("user_nodes", 'default', $uid),
  );
}

/**
 * Implements hook_user_view().
 */
function myassist_user_user_view($account, $view_mode, $langcode) {
  unset($account->content['user_picture']); // Sabotage user picture; we'll display it ourselves
  unset($account->content['userpoints']); // Sabotage points display from function userpoints_user_view in the userpoints module
  unset($account->content['summary']); // Sabotage history display; we'll display it ourselves
}

/**
 * Implements hook_theme().
 */
function myassist_user_theme($existing, $type, $theme, $path){
  return array(
    'myassist_username' => array(
      'template' => 'templates/myassist_username', // define myassist_points.tpl.php inside module - point to myassist_achievements/templates/myassist_points.tpl.php
      'variables' => array('name' => NULL), //define all variables used in the template file
    ),
    'myassist_membersince' => array(
      'template' => 'templates/myassist_membersince', // define myassist_points.tpl.php inside module - point to myassist_achievements/templates/myassist_points.tpl.php
      'variables' => array('created' => NULL), //define all variables used in the template file
    ),
    'myassist_userinfo' => array(
      'template' => 'templates/myassist_userinfo', // define myassist_points.tpl.php inside module - point to myassist_achievements/templates/myassist_points.tpl.php
      'variables' => array('gender' => NULL, 'age' => NULL), //define all variables used in the template file
    ),
  );
}

function myassist_user_preprocess_menu_local_tasks(&$vars, $hooks) {
  unset($vars['primary']); // Nuke the user view tabs
}


function myassist_user_menu() {
  $items = array();
  $items['user/edit'] = array(
    'title'            => 'Edit Profile',
    'description'      => 'Edit own profile',
    'page callback'    => 'myassist_user_edit_my_profile',
    'access arguments' => array('access content'),
    'type'             => MENU_NORMAL_ITEM,
    'menu_name'        => 'user-menu',
  );
  $items['user/achievements'] = array(
    'title'            => 'Achievements',
    'description'      => 'View my achievements',
    'page callback'    => 'myassist_user_view_my_achievements',
    'access arguments' => array('access content'),
    'type'             => MENU_NORMAL_ITEM,
    'menu_name'        => 'user-menu',
  );

  $items['user/points'] = array(
    'title' => 'Points',
    'description'      => 'View my points',
    'page callback'    => 'myassist_user_view_my_points',
    'access arguments' => array('access content'),
    'type'             => MENU_NORMAL_ITEM,
    'menu_name'        => 'user-menu',
  );
  return $items;
}

function myassist_user_edit_my_profile() {
  global $user;

  $hasAdult = false;
  $hasYouth = false;
  $result = db_query('SELECT {type} FROM {profile} WHERE uid = :uid', array(':uid' => $user->uid));
  foreach ($result as $record) {
    if ($record->type === "ungeprofil") {
      $hasYouth = true;
    } else if ($record->type === "voksenprofil") {
      $hasAdult = true;
    }
  }
  $suffix = "";
  if ($hasAdult) {
    $suffix = "/voksenprofil";
  } elseif ($hasYouth) {
    $suffix = "/ungeprofil";
  }

  drupal_goto('user/' . $user->uid . '/edit' . $suffix);
}

function myassist_user_view_my_achievements() {
  global $user;
  drupal_goto('user/'.$user->uid.'/achievements');
}
function myassist_user_view_my_points() {
  global $user;
  drupal_goto('user/'.$user->uid.'/points');
}